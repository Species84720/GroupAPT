@model Test2.Models.DBModels.MultipleChoiceQuestion

    @{
        ViewBag.Title = "Create";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="card managementFooter">
            <div class="card-header">
                <h5 class="card-title">Create Question for Subject: @ViewBag.Subject</h5>
            </div>
            
            <b style="color: red">@ViewBag.Error</b>

            <div class="form">
                <div class="card-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger form-style" })

                    <div class="form-group row">
                        @Html.LabelFor(model => model.question.TopicId, "Topic Name:", htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                        <div class="col-sm-10">
                            @Html.DropDownList("question.TopicId", (SelectList)ViewBag.TopicId, htmlAttributes: new { @class = "form-control form-style" })
                            @Html.ValidationMessageFor(model => model.question.TopicId, "", new { @class = "text-danger form-style" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-10">
                            @Html.HiddenFor(model => model.question.SubjectId)
                            @Html.ValidationMessageFor(model => model.question.SubjectId, "", new { @class = "text-danger form-style" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.question.QuestionUsage, "Use In:", htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                        <div class="col-sm-10">
                            @Html.EnumDropDownListFor(model => model.question.QuestionUsage, htmlAttributes: new { @class = "form-control form-style" })
                            @Html.ValidationMessageFor(model => model.question.QuestionUsage, "", new { @class = "text-danger form-style" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.question.QuestionFormat, "Question Format:", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.EnumDropDownListFor(model => model.question.QuestionFormat, htmlAttributes: new { @class = "form-control form-style", @id = "selectingType", onchange = "MultipleChoiceOption()" })
                            @Html.ValidationMessageFor(model => model.question.QuestionFormat, "", new { @class = "text-danger form-style" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.question.QuestionText, "Question Text:", htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                        <div class="col-sm-10">
                            @Html.TextAreaFor(model => model.question.QuestionText, new { htmlAttributes = new { @class = "form-control form-style" }, rows = "5", style = "width: 100%; max-width: 100%" })
                            @Html.ValidationMessageFor(model => model.question.QuestionText, "", new { @class = "text-danger form-style" })
                        </div>
                    </div>

                    @{
                        Html.RenderPartial("_MultipleChoiceQuestionsEditing", Model);
                    }

                    <div class="form-group row">
                        @Html.LabelFor(model => model.question.SampleAnswer, "Sample Answer:", htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.question.SampleAnswer, new { htmlAttributes = new { @class = "form-control form-style" } })
                            @Html.ValidationMessageFor(model => model.question.SampleAnswer, "", new { @class = "text-danger form-style" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div id="buttonPadding" class="col-sm-10">
                            <input type="submit" value="Create" class="btn btn-primary" />
                            @Html.ActionLink("Cancel", "EditQuestions", "Examiner", new { subject = Model.question.SubjectId }, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

<script src="/Scripts/QuestionsEditing.js"></script>
