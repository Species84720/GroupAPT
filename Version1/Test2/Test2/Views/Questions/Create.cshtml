@model Test2.Models.DBModels.Question

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Question for subject: @ViewBag.Subject </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.TopicId, "TopicId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TopicId, new SelectList(ViewBag.TopicId, "TopicId", "TopicName"), "Select Topic", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TopicId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
          
            <div class="col-md-10">
                

                @Html.HiddenFor(model => model.SubjectId)
                @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })



            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionUsage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.QuestionUsage, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.QuestionUsage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" }, rows = "10", cols = "50" })
                @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SampleAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SampleAnswer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SampleAnswer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionFormat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.QuestionFormat, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.QuestionFormat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "EditQuestions", "Examiner" ,new { subject = Model.SubjectId }, new { })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
