@model Test2.Models.DBModels.ExamSession

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card managementFooter">
        <div class="card-header">
            <h5 class="card-title">Edit Exam Session</h5>
        </div>
        <div class="form">
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger form-style" })
                @Html.HiddenFor(model => model.ExamId)
                <div class="form-group row">
                    @Html.LabelFor(model => model.SubjectId, "Subject", htmlAttributes: new { @class = "col-control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Model.RelatedSubject.SubjectName
                        @Html.HiddenFor(model => model.SubjectId)
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger form-style" })
                    </div>
                </div>
                
                <div class="form-group row">
                    <b class="col-sm-2">Current Location:</b>
                    <div id="location1Dropdown" class="col-sm-10 row">
                        <div class="col-sm-8">
                            @if (ViewBag.LocationCall != null)
                            {
                                foreach (string location in ViewBag.LocationCall)
                                {
                                    @location<text> </text>
                                }
                                @*
                                @ViewBag.LocationCall.Campus @ViewBag.LocationCall.Building @ViewBag.LocationCall.Block @ViewBag.LocationCall.Floor @ViewBag.LocationCall.Room
                                *@                                                                                                                    
                            }
                            else
                            {
                                @Html.ValidationMessageFor(model => model.LocationId, "Please Select Locations Below to get the Location Id", new { @class = "text-danger form-style" })
                            }
                        </div>
                        <div class="col-sm-4 row">
                            <b class="col-8">new id: </b>
                            @Html.TextBoxFor(model => model.LocationId, new {@readonly = "true", required = "true", style = "border: none; outline: none; width: 100%", @class=  "col-4" })
                        </div>
                    </div>
                </div>
                
                <div id="location1" class="form-group row">
                    @Html.LabelFor(model => model.LocationId, "Select Campus", htmlAttributes: new { @class = "col-control-label col-sm-2" })
                    <div id="location1Dropdown" class="col-sm-10">
                        @Html.DropDownList("LocationId1", (SelectList)ViewBag.LocationId, "Select Campus", htmlAttributes: new { @id = "LocationChange1", @class = "form-control form-style", onchange = "LocationChange(1)" })
                    </div>
                </div>

                <div id="location2" hidden class="form-group row">
                    <div class="col-sm-2" style="width:100%"></div>
                    <div id="location2Dropdown" class="col-sm-10">
                    </div>
                </div>

                <div id="location3" hidden class="form-group row">
                    <div class="col-sm-2" style="width:100%"></div>
                    <div id="location3Dropdown" class="col-sm-10">
                    </div>
                </div>

                <div id="location4" hidden class="form-group row">
                    <div class="col-sm-2" style="width:100%"></div>
                    <div id="location4Dropdown" class="col-sm-10">
                    </div>
                </div>

                <div id="location5" hidden class="form-group row">
                    <div class="col-sm-2" style="width:100%"></div>
                    <div id="location5Dropdown" class="col-sm-10">
                    </div>
                </div>
                
                @*
                <div class="form-group row">
                    <b class="col-sm-2">Location Id:</b>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.LocationId, new { @readonly = "true", required = "true", style = "border: none; outline: none" } )
                        @Html.ValidationMessageFor(model => model.LocationId, "Please Select Locations Above to get the Location Id", new {@class = "text-danger form-style"})
                    </div>
                </div>
                *@

                <div class="form-group row">
                    @Html.LabelFor(model => model.ExamDateTime, htmlAttributes: new { @class = "col-control-label col-sm-2" })
                    <div class="col-sm-10">
                        @if (Model.ExamDateTime != null)
                        {
                            @Html.HiddenFor(model => model.ExamDateTime)
                            @Model.ExamDateTime
                            @Html.ActionLink("Change", "ExamDateChange", new { idd = Model.ExamId }, new { @class = "btn btn-primary" })
                        }
                        else
                        {
                            @Html.Editor("ExamDateTime", new { htmlAttributes = new { @class = "form-control form-style", type = "datetime-local", value = @Model.ExamDateTime } })}
                        @Html.ValidationMessageFor(model => model.ExamDateTime, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.ExamEndTime, htmlAttributes: new { @class = "col-control-label col-sm-2" })
                    <div class="col-sm-10">
                        @if (Model.ExamEndTime != null)
                        {
                            @Html.HiddenFor(model => model.ExamEndTime)
                            @Model.ExamEndTime
                            @Html.ActionLink("Change", "ExamEndChange", new { idd = Model.ExamId }, new { @class = "btn btn-primary" })
                        }
                        else
                        { @Html.EditorFor(model => model.ExamEndTime, new { htmlAttributes = new { @class = "form-control form-style", type = "datetime-local" } })}
                        @Html.ValidationMessageFor(model => model.ExamEndTime, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.QuestionAmount)
                @Html.ValidationMessageFor(model => model.QuestionAmount, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.AccessCode)
                @Html.ValidationMessageFor(model => model.AccessCode, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.CodeIssueDateTime)
                @Html.ValidationMessageFor(model => model.CodeIssueDateTime, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.FullyCorrected)
                @Html.ValidationMessageFor(model => model.FullyCorrected, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.MaxMark)
                @Html.ValidationMessageFor(model => model.MaxMark, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.MinMark)
                @Html.ValidationMessageFor(model => model.MinMark, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.AvgMark)
                @Html.ValidationMessageFor(model => model.AvgMark, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.NumOfParticipants)
                @Html.ValidationMessageFor(model => model.NumOfParticipants, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.NumOfFails)
                @Html.ValidationMessageFor(model => model.NumOfFails, "", new { @class = "text-danger form-style" })

                <div class="form-group row">
                    <div id="buttonPadding" class="col-sm-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        @Html.ActionLink("Cancel", "ExamManager", "Clerk", new { }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="/Scripts/LocationEdit.js"></script>