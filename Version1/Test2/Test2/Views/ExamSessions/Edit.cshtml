@model Test2.Models.DBModels.ExamSession

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card managementFooter">
        <div class="card-header">
            <h5 class="card-title">Edit Exam Session</h5>
        </div>
        <div class="form">
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger form-style" })
                @Html.HiddenFor(model => model.ExamId)
                <div class="form-group row">
                    @Html.LabelFor(model => model.SubjectId, "Subject", htmlAttributes: new { @class = "col-control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Model.RelatedSubject.SubjectName
                        @Html.HiddenFor(model => model.SubjectId)
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                <div id="location1" class="form-group row">
                    @Html.LabelFor(model => model.LocationId, "Select Campus", htmlAttributes: new { @class = "col-control-label col-sm-2" })
                    <div id="location1Dropdown" class="col-sm-10">
                        @Html.DropDownList("LocationId1", (SelectList)ViewBag.LocationId, "Select Campus", htmlAttributes: new { @id = "LocationChange1", @class = "form-control form-style", onchange = "LocationChange(1)" })
                    </div>
                </div>

                <div id="location2" hidden class="form-group row">
                    <div class="col-sm-2" style="width:100%"></div>
                    <div id="location2Dropdown" class="col-sm-10">
                    </div>
                </div>

                <div id="location3" hidden class="form-group row">
                    <div class="col-sm-2" style="width:100%"></div>
                    <div id="location3Dropdown" class="col-sm-10">
                    </div>
                </div>

                <div id="location4" hidden class="form-group row">
                    <div class="col-sm-2" style="width:100%"></div>
                    <div id="location4Dropdown" class="col-sm-10">
                    </div>
                </div>

                <div id="location5" hidden class="form-group row">
                    <div class="col-sm-2" style="width:100%"></div>
                    <div id="location5Dropdown" class="col-sm-10">
                    </div>
                </div>
                
                @*
                <div class="form-group row">
                    <b class="col-sm-2">Location Id:</b>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.LocationId, new { @readonly = "true", required = "true", style = "border: none; outline: none" } )
                        @Html.ValidationMessageFor(model => model.LocationId, "Please Select Locations Above to get the Location Id", new {@class = "text-danger form-style"})
                    </div>
                </div>
                *@

                <div class="form-group row">
                    @Html.LabelFor(model => model.ExamDateTime, htmlAttributes: new { @class = "col-control-label col-sm-2" })
                    <div class="col-sm-10">
                        @if (Model.ExamDateTime != null)
                        {
                            @Html.HiddenFor(model => model.ExamDateTime)
                            @Model.ExamDateTime
                            @Html.ActionLink("Change", "ExamDateChange", new { idd = Model.ExamId }, new { @class = "btn btn-primary" })
                        }
                        else
                        {
                            @Html.Editor("ExamDateTime", new { htmlAttributes = new { @class = "form-control form-style", type = "datetime-local", value = @Model.ExamDateTime } })}
                        @Html.ValidationMessageFor(model => model.ExamDateTime, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.ExamEndTime, htmlAttributes: new { @class = "col-control-label col-sm-2" })
                    <div class="col-sm-10">
                        @if (Model.ExamEndTime != null)
                        {
                            @Html.HiddenFor(model => model.ExamEndTime)
                            @Model.ExamEndTime
                            @Html.ActionLink("Change", "ExamEndChange", new { idd = Model.ExamId }, new { @class = "btn btn-primary" })
                        }
                        else
                        { @Html.EditorFor(model => model.ExamEndTime, new { htmlAttributes = new { @class = "form-control form-style", type = "datetime-local" } })}
                        @Html.ValidationMessageFor(model => model.ExamEndTime, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.QuestionAmount)
                @Html.ValidationMessageFor(model => model.QuestionAmount, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.AccessCode)
                @Html.ValidationMessageFor(model => model.AccessCode, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.CodeIssueDateTime)
                @Html.ValidationMessageFor(model => model.CodeIssueDateTime, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.FullyCorrected)
                @Html.ValidationMessageFor(model => model.FullyCorrected, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.MaxMark)
                @Html.ValidationMessageFor(model => model.MaxMark, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.MinMark)
                @Html.ValidationMessageFor(model => model.MinMark, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.AvgMark)
                @Html.ValidationMessageFor(model => model.AvgMark, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.NumOfParticipants)
                @Html.ValidationMessageFor(model => model.NumOfParticipants, "", new { @class = "text-danger form-style" })

                @Html.HiddenFor(model => model.NumOfFails)
                @Html.ValidationMessageFor(model => model.NumOfFails, "", new { @class = "text-danger form-style" })

                <div class="form-group row">
                    <div id="buttonPadding" class="col-sm-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        @Html.ActionLink("Cancel", "ExamManager", "Clerk", new { }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

                        <script>
                            function LocationChange(number) {
                                var locationSubmission;
                                var checkSelection = true;
                                if (number === 1) {
                                    document.getElementById("location2").hidden = true;
                                    document.getElementById("location3").hidden = true;
                                    document.getElementById("location4").hidden = true;
                                    document.getElementById("location5").hidden = true;

                                    var choice1 = document.getElementById("LocationChange1");
                                    locationSubmission = {
                                        campus: choice1.options[choice1.selectedIndex].text,
                                        building: null,
                                        floor: null,
                                        block: null,
                                        room: null
                                    };
                                    if (choice1.selectedIndex !== 0) {
                                        checkSelection = false;
                                        document.getElementById("location2").hidden = false;
                                    }
                                }
                                else if (number === 2) {
                                    document.getElementById("location2").hidden = false;
                                    document.getElementById("location3").hidden = true;
                                    document.getElementById("location4").hidden = true;
                                    document.getElementById("location5").hidden = true;

                                    var choice1 = document.getElementById("LocationChange1");
                                    var choice2 = document.getElementById("LocationChange2");
                                    locationSubmission = {
                                        campus: choice1.options[choice1.selectedIndex].text,
                                        building: choice2.options[choice2.selectedIndex].text,
                                        floor: null,
                                        block: null,
                                        room: null
                                    };
                                    if (choice2.selectedIndex !== 0) {
                                        checkSelection = false;
                                        document.getElementById("location3").hidden = false;
                                    }
                                }
                                else if (number === 3) {
                                    document.getElementById("location2").hidden = false;
                                    document.getElementById("location3").hidden = false;
                                    document.getElementById("location4").hidden = true;
                                    document.getElementById("location5").hidden = true;

                                    var choice1 = document.getElementById("LocationChange1");
                                    var choice2 = document.getElementById("LocationChange2");
                                    var choice3 = document.getElementById("LocationChange3");
                                    locationSubmission = {
                                        campus: choice1.options[choice1.selectedIndex].text,
                                        building: choice2.options[choice2.selectedIndex].text,
                                        floor: choice3.options[choice3.selectedIndex].text,
                                        block: null,
                                        room: null
                                    };
                                    if (choice3.selectedIndex !== 0) {
                                        checkSelection = false;
                                        document.getElementById("location4").hidden = false;
                                    }
                                }
                                else if (number === 4) {
                                    document.getElementById("location2").hidden = false;
                                    document.getElementById("location3").hidden = false;
                                    document.getElementById("location4").hidden = false;
                                    document.getElementById("location5").hidden = true;

                                    var choice1 = document.getElementById("LocationChange1");
                                    var choice2 = document.getElementById("LocationChange2");
                                    var choice3 = document.getElementById("LocationChange3");
                                    var choice4 = document.getElementById("LocationChange4");
                                    locationSubmission = {
                                        campus: choice1.options[choice1.selectedIndex].text,
                                        building: choice2.options[choice2.selectedIndex].text,
                                        floor: choice3.options[choice3.selectedIndex].text,
                                        block: choice4.options[choice4.selectedIndex].text,
                                        room: null
                                    };
                                    if (choice4.selectedIndex !== 0) {
                                        checkSelection = false;
                                        document.getElementById("location5").hidden = false;
                                    }
                                }
                                else if (number === 5) {
                                    var choice1 = document.getElementById("LocationChange1");
                                    var choice2 = document.getElementById("LocationChange2");
                                    var choice3 = document.getElementById("LocationChange3");
                                    var choice4 = document.getElementById("LocationChange4");
                                    var choice5 = document.getElementById("LocationChange5");
                                    locationSubmission = {
                                        campus: choice1.options[choice1.selectedIndex].text,
                                        building: choice2.options[choice2.selectedIndex].text,
                                        floor: choice3.options[choice3.selectedIndex].text,
                                        block: choice4.options[choice4.selectedIndex].text,
                                        room: choice5.options[choice5.selectedIndex].text
                                    };
                                    if (choice5.selectedIndex !== 0) {
                                        checkSelection = false;
                                    }
                                }

                                if (checkSelection === false) {
                                    $.ajax({
                                        url: "/ExamSessions/AjaxPost",
                                        type: "POST",
                                        dataType: "json",
                                        data: locationSubmission,
                                        success: function (data) {
                                            if (data.Id === 0) {
                                                var EditedNumber = parseInt(number) + parseInt("1");
                                                document.getElementById("location" + EditedNumber + "Dropdown").innerHTML = '';
                                                var div = document.querySelector("#location" + EditedNumber + "Dropdown");
                                                var select = document.createElement("select");
                                                select.setAttribute("id", "LocationChange" + EditedNumber);
                                                select.setAttribute("class", "form-control form-style");
                                                select.setAttribute("onchange", "LocationChange(" + EditedNumber + ")");
                                                select.setAttribute("name", "LocationId" + EditedNumber);

                                                if (EditedNumber === 2)
                                                    select.options.add(new Option("Select Building"));
                                                else if (EditedNumber === 3)
                                                    select.options.add(new Option("Select Floor"));
                                                else if (EditedNumber === 4)
                                                    select.options.add(new Option("Select Block"));
                                                else if (EditedNumber === 5)
                                                    select.options.add(new Option("Select Room"));

                                                for (var i in data.location) {
                                                    var location = data.location[i];
                                                    select.options.add(new Option(location));
                                                }

                                                div.appendChild(select);
                                            }
                                            //if the data is of the room itself
                                            else {
                                                var FinalChoice = document.getElementById("LocationChange5");
                                                //document.getElementById("LocationId").value = data.Id;
                                                FinalChoice.options[FinalChoice.selectedIndex].value = data.Id;
                                                FinalChoice.setAttribute("name", "LocationId");
                                            }
                                        }
                                    });
                                }
                            }
                        </script>