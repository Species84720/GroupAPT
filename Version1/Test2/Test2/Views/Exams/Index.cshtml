@using System.Web.DynamicData
@using Microsoft.AspNet.Identity
@using Test2.Models.DBModels
@model IEnumerable<Test2.Models.DBModels.PaperQuestion>
@{
    ViewBag.Title = "Index";
    HttpContext.Current.Session["Username"] = User.Identity.GetUserName();
}
@if (Model == null)
{
    if (ViewData["ExamId"] == null)
    {
        <b>You have not selected any exam!</b>
    }
    else
    {
        <div class="card managementFooter">
            <div class="card-header">
                <h5 class="card-title">Take a snapshot!</h5>
            </div>
            <div class="card-body">

                <div class="form-group row">
                    <div id="camera" style="width: 365px; float: left; margin: 10px">
                        <video autoplay="true" id="videoElement" style="float: left"></video>
                        <button id="startbutton" class="btn btn-primary btn-sm" style="position: relative; bottom: 40px; margin-left: auto; margin-right: auto; display: block;" hidden>Take photo</button>
                    </div>
                    <canvas id="photo" width="365px" height="275px" style="float: left; margin: 10px" data-taken="false" data-imgSrc="" hidden></canvas>
                </div>
                <form method="POST">
                    <div class="form-group row">
                        @Html.Hidden("ExamId")
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-10">
                            <input type="text" id="AccessCode" name="AccessCode" />
                        </div>
                    </div>

                    @if (ViewData["Error"] != null)
                    {
                        <p style="color: red">
                            @ViewData["Error"]
                        </p>
                    }

                    <div hidden>
                        <input type="text" id="imagename" name="imagename" value="" />
                    </div>

                    <div hidden id="submitButton" class="form-group row">
                        <div id="buttonPadding" class="col-sm-10">
                            <input type="submit" value="Submit Code" class="btn btn-primary" />
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <script>
            var video = document.querySelector("#videoElement");

            if (navigator.mediaDevices.getUserMedia) {
                navigator.mediaDevices.getUserMedia({ video: true })
                    .then(function (stream) {
                        video.srcObject = stream;

                        //to show the canvas
                        document.getElementById('photo').hidden = false;
                        //to show the take screenshot button
                        document.getElementById('startbutton').hidden = false;
                        document.getElementById('startbutton').onclick =
                            function () {
                                var canvas = document.getElementById('photo');
                                var context = canvas.getContext('2d');
                                var dw = canvas.width;
                                var dh = canvas.height;
                                var video = document.getElementById('videoElement');
                                context.drawImage(video, 0, 0, dw, dh);
                                var dataImage = canvas.toDataURL('image/png');
                                canvas.setAttribute('data-imgSrc', dataImage);
                                canvas.setAttribute('data-taken', 'true');

                                document.getElementById('imagename').setAttribute('value', dataImage);
                                document.getElementById('submitButton').hidden = false;
                            }

                    })
                    .catch(function (error) {
                        console.log("Something went wrong!");
                    });
            }

        </script>
    }
}
else
{
    ViewBag.Title = "Exam Page";
    HttpContext.Current.Session["Username"] = User.Identity.GetUserName();


    List<PaperQuestion> paperQuestions = Model.ToList();

    List<Question> questions = ViewBag.Questions;
    List<StudentAnswer> answers = ViewBag.Answers;
    List<MultipleChoice> multichoices = ViewBag.MultiChoices;

    string examId = (string)ViewData["ExamId"];
    string[] examIdSplit = new string[4];
    examIdSplit[0] = ViewBag.Subject;

    string user = User.Identity.GetUserName();

    <script src="/Scripts/ExamPage.js"></script>

    <div id="tableCard" class="card">
        <div class="card-header">
            <h2 class="card-title">The Exam Paper of "@ViewBag.Subject"</h2>
        </div>
        <div class="card-body">
            <table class="table table-bordered table-striped">
                <thead>
                <tr>
                    <th scope="col">
                        Question Number
                    </th>
                    <th scope="col" width="70%">
                        Question Text
                        <button style="float: right" hidden id="saveButton" class="btn btn-primary bottomButton" OnClick="save('@User.Identity.GetUserName()','@examIdSplit[0]')">
                            Save
                        </button>
                    </th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th>
                        @foreach (PaperQuestion item in paperQuestions)
                        {
                            if ((questions.Where(x => x.QuestionId == item.QuestionId).SingleOrDefault().QuestionFormat.ToString()) != "MultipleChoice")
                            {
                                <button id="@item.NumberInPaper" class='btn QuestionButton @if (answers.Where(x => x.PaperQuestionId == item.PaperQuestionId).SingleOrDefault() != null)
                                                                                           {
                                                                                               if (answers.Where(x => x.PaperQuestionId == item.PaperQuestionId).SingleOrDefault().CommittedByStudent == true) {<text>Finished</text>}
                                                                                               else {<text>Started</text>}
                                                                                           }' style="width: 100%; float: left" OnClick="buttonAction(this, '@questions.Where(x => x.QuestionId == item.QuestionId).SingleOrDefault().QuestionText.ToString()', @item.NumberInPaper, '@item.PaperQuestionId', ' ', ' ', ' ', ' ')" ;>
                                    @Html.DisplayFor(modelItem => item.NumberInPaper) out of @paperQuestions.Count
                                </button>
                            }
                            else
                            {
                                <button id="@item.NumberInPaper" class='btn QuestionButton @if (answers.Where(x => x.PaperQuestionId == item.PaperQuestionId).SingleOrDefault() != null)
                                                                                           {
                                                                                               if (answers.Where(x => x.PaperQuestionId == item.PaperQuestionId).SingleOrDefault().CommittedByStudent == true) {<text>Finished</text>}
                                                                                               else {<text>Started</text>}
                                                                                           }' style="width: 100%; float: left" OnClick="buttonAction(this, '@questions.Where(x => x.QuestionId == item.QuestionId).SingleOrDefault().QuestionText.ToString()', @item.NumberInPaper, '@item.PaperQuestionId', '@multichoices.Where(x => x.QuestionId == item.QuestionId).SingleOrDefault().OptionText1', '@multichoices.Where(x => x.QuestionId == item.QuestionId).SingleOrDefault().OptionText2', '@multichoices.Where(x => x.QuestionId == item.QuestionId).SingleOrDefault().OptionText3', '@multichoices.Where(x => x.QuestionId == item.QuestionId).SingleOrDefault().OptionText4')" ;>
                                    @Html.DisplayFor(modelItem => item.NumberInPaper) out of @paperQuestions.Count
                                </button>
                            }

                            if (answers.Where(x => x.PaperQuestionId == item.PaperQuestionId).SingleOrDefault() != null)
                            {
                                <p hidden id="Answer @item.NumberInPaper" name="" submitted="@answers.Where(x => x.PaperQuestionId == item.PaperQuestionId).SingleOrDefault().CommittedByStudent.ToString()">@answers.Where(x => x.PaperQuestionId == item.PaperQuestionId).SingleOrDefault().Answer</p>
                            }
                            else
                            {
                                <p hidden id="Answer @item.NumberInPaper" name="" submitted="False"></p>
                            }
                        }
                    </th>
                    <th>
                        <p id="examStart">
                            Please choose the appropriate Question on the left. Good luck and May the odds be ever in your favour!

                        </p>
                        <p hidden id="QuestionTextShown"></p>
                        <textarea hidden style="width: 100%; float: left; height: 100px" id="QuestionAnswer" name=""></textarea>

                        <!--pargaraphs that show the multiple choice options-->
                        <input hidden id="Choice 1" type="radio" name="Choice" value="1"> <h hidden id="Choice1"></h><br>
                        <input hidden id="Choice 2" type="radio" name="Choice" value="2"> <h hidden id="Choice2"></h><br>
                        <input hidden id="Choice 3" type="radio" name="Choice" value="3"> <h hidden id="Choice3"></h><br>
                        <input hidden id="Choice 4" type="radio" name="Choice" value="4"> <h hidden id="Choice4"></h><br>

                        <button style="float: right" hidden id="submitButton" class="btn btn-primary" OnClick="submit('@User.Identity.GetUserName()','@examIdSplit[0]')">
                            <p hidden id="CurrentQuestion"></p>
                            Submit
                        </button>
                    </th>
                </tr>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        if (window.history.replaceState) {
            window.history.replaceState(null, null, window.location.href);
        }
    </script>
}