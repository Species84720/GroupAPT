@using Test2.Models.DBModels
@model Test2.Models.CorrectingViewModel

@{
                /**/

                ViewBag.Title = "CorrectExam";
                Layout = "~/Views/Shared/_Layout.cshtml";


}

@if (Model.Subject != null)
{
    if (Model.AllQsCorrected)
    {

<div>

    No questions to be corrected were found.
    @if (Model.AllSessionsCorrected)
    {
        <text> The exam for this subject either hasn't ended or is fully corrected already.</text>
        if (Model.ExamFullyCorrected)
        { <text> The exam for this subject is fully corrected already.</text>}

    if (Model.ExamNotEnded)
    { <text> The exam for this subject has not finished yet.</text>}

}
    

    @Html.ActionLink("Go Back to Dashboard", "Examiner", "Dashboard", new { @class = "btn btn-primary" }, new { })

</div>

    }
    else
    {
        using (Html.BeginForm("Correct", "Examiner", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
        <div class="form-group">
            <div id="tableCard" class="card">
                <div class="card-header">
                    <h2 class="card-title">Answer Correction</h2>
                </div>
                <div class="card-body">
                    <table class="table table-bordered table-striped">
                        <tr>
                            <th> Question</th>
                            <td>@Html.DisplayFor(model => model.Answer.RelatedPaperQuestion.RelatedQuestion.QuestionText)</td>
                        </tr>
                        <tr></tr>
                        <tr>
                            <th>Sample Answer</th>
                            <td>@Html.DisplayFor(model => model.Answer.RelatedPaperQuestion.RelatedQuestion.SampleAnswer)</td>
                        </tr>
                        <tr></tr>
                        <tr>
                            <th>Student's Answer</th>
                            <td>@Html.DisplayFor(model => model.Answer.Answer)</td>
                        </tr>
                        <tr></tr>
                        <tr>
                            <td> <b> Assign Mark  Out Of: @Html.DisplayFor(model => model.Answer.RelatedPaperQuestion.MarksAllocated) </b></td>
                            <td>
                                @Html.EditorFor(model => model.Answer.MarksGained, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Answer.MarksGained, "", new { @class = "text-danger" })

                            </td>
                        </tr>
                        <tr></tr>
                        <tr>
                            <th>Add Comment</th>
                            <td>
                                @Html.TextAreaFor(model => model.Answer.ExaminerComments)
                                @Html.ValidationMessageFor(model => model.Answer.ExaminerComments, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr></tr>
                        <tr>
                            <th>
                                @Html.HiddenFor(model => model.Answer.AnswerId)
                                @Html.HiddenFor(model => model.Answer.CorrectedDateTime)
                                @Html.HiddenFor(model => model.Answer.CorrectorId)

                            </th>
                            <td><input type="submit" value="Save" class="btn btn-default" /></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        } //ends using
    } //end else
}
else
{  //if subject happens to be null we ask for the examiner to select a subject to correct
    using (Html.BeginForm("CorrectExam", "Examiner", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="card managementFooter">
            <div class="card-header">
                <h2 class="card-title">Correct Exams</h2>
            </div>
            <div class="card-body">
                <div class="form-group row">
                    @Html.Label("Choose Subject:", htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                    <div class="col-sm">
                        @Html.DropDownListFor(model => model.Subject, new SelectList(Model.Subjects, "SubjectId", "subjectName"), "Select Subject", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="col-sm">
                        <input class="btn btn-outline-primary" type="submit" value="Apply Subject Filter" />
                    </div>
                </div>
                @if (Model.AllSessionsCorrected)
                {
                    <div class="alert alert-success" role="alert">
                        The exam sessions for this subject have been corrected.
                    </div>
                }
            </div>
        </div>
    }
}
