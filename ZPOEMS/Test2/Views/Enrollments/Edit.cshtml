@model Test2.Models.DBModels.Enrollment

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card managementFooter">
        <div class="card-header">
            <h5 class="card-title">Edit Enrollment</h5>
        </div>
        <div class="form">
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger form-style" })
                @Html.HiddenFor(model => model.EnrollmentId)

                <div class="form-group row">
                    @Html.LabelFor(model => model.StudentId, "StudentId", htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                    <div class="col-sm-10">
                        @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control form-style" })
                        @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.SubjectId, "SubjectId", htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                    <div class="col-sm-10">
                        @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control form-style" })
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.ExamMark, htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.ExamMark, new { htmlAttributes = new { @class = "form-control form-style" } })
                        @Html.ValidationMessageFor(model => model.ExamMark, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.SeatNumber, htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.SeatNumber, new { htmlAttributes = new { @class = "form-control form-style" } })
                        @Html.ValidationMessageFor(model => model.SeatNumber, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.SessionStatus, htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                    <div class="col-sm-10">
                        @Html.EnumDropDownListFor(model => model.SessionStatus, htmlAttributes: new { @class = "form-control form-style" })
                        @Html.ValidationMessageFor(model => model.SessionStatus, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.FinalAssessment, htmlAttributes: new { @class = "col-sm-2 col-control-label" })
                    <div class="col-sm-10">
                        @Html.EnumDropDownListFor(model => model.FinalAssessment, htmlAttributes: new { @class = "form-control form-style" })
                        @Html.ValidationMessageFor(model => model.FinalAssessment, "", new { @class = "text-danger form-style" })
                    </div>
                </div>

                <div class="form-group row">
                    <div id="buttonPadding" class="col-sm-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        @Html.ActionLink("Cancel", "Index", new { }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
